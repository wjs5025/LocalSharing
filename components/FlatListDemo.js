import React, {Component} from 'react';
import {TouchableHighlight , View, Text, StyleSheet, FlatList, TouchableOpacity, TouchableWithoutFeedback, Image} from 'react-native';

import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import 'react-native-gesture-handler';

import firestore from '@react-native-firebase/firestore';
import SharingPost from "./SharingPost";
import TopMenu from "./TopMenu";
import PlusButton from "./PlusButton"

const Stack = createStackNavigator();
export default class Screen extends Component {
  render() {
     return (
        <Stack.Navigator>
          <Stack.Screen name="FlatListDemo" component={FlatListDemo} options={{headerShown: false}}/>
          <Stack.Screen name="SharingPost" component={SharingPost} options={{headerShown: false}}/>
        </Stack.Navigator>
     );
   }
 }

class FlatListDemo extends Component{
    state = {
        post :[
            [{title : "", User_ID : 0, post_ID : 0, sharing_MAX : 0, sharing_now : 0, title : "", ÎÇ¥Ïö© : "", img : ""}]
        ]
    }
   constructor(props){
    super(props);
    this.getPost();
    this.post = firestore().collection("sharing-posts").doc("post1").onSnapshot(doc => {
        this.setState({
            post :[
                {User_ID : doc.data().UserID, post_ID : doc.data().post_ID, sharing_MAX : doc.data().sharing_MAX, sharing_now : doc.data().sharing_now, title : doc.data().title, ÎÇ¥Ïö© : doc.data().ÎÇ¥Ïö©, img : doc.data().img,}
            ]})
    })
    this.state={
        datas:[
            {name:"ÏπòÌÇ®Ïßë", message:"Î∞©Í∏à ÏãúÏº∞ÎäîÎç∞ ÎÇòÎà†ÎìúÏã§ Î∂Ñ",img: require('../image/ÏπòÌÇ®.jpg')},
            {name:"Ïö∞ÎèÑÍ∏∞ÏãùÎãπ ÏûÖÎãàÎã§.", message:"Ïò§Îäò ÎÇ®ÏùÄ Î∞òÏ∞¨ÎìúÎ¶¥Í≤åÏöîüéÅ",img: require('../image/Î∞òÏ∞¨.jpg')},
            {name:"ÏóÑÏßÄÎ∞òÏ†ê ÏûÖÎãàÎã§.", message:"ÍπÄÏû•ÌñàÎäîÎç∞ ÎßéÏù¥ ÎÇ®ÏïÑÏÑú ÎÇòÎà†ÎìúÎ¶¨Î†§Í≥†Ìï¥Ïöî",img: require('../image/ÍπÄÏπò.jpg')},
            {name:"ÌòÅÏ£ºÎÑ§ Î∞òÏ∞¨", message:"Î¨¥ÎßêÎû≠Ïù¥ ÎÇ®ÏïÑÏÑú ÎìúÎ†§Ïöî",img: require('../image/Î¨¥ÎßêÎû≠Ïù¥.jpg')},
            {name:"Ï†ïÌõàÏù¥ÎÑ§ Î†àÏä§ÌÜ†Îûë", message:"Î¨¥ÏßÄÏÑ± Ï†úÏú° Î≥∂ÏïÑÎìúÎ¶ΩÎãàÎã§",img: require('../image/ÎãπÍ∑º.jpg')},
            {name:"ÎÜçÏÇ¨Ïôï Ï°∞Ïû¨ÌòÑ", message:"Ïú†Í∏∞ÎÜç Î¨¥ ÎìúÎ†§Ïöî",img: require('../image/Î¨¥.jpg')},
            {name:"KNU Ìô©Ïú§Ïö©ÎùºÎ©¥", message:"ÎùºÎ©¥ Í∞ÄÏ†∏Í∞ÄÏÑ∏Ïöî",img: require('../image/ÎùºÎ©¥.jpg')},
            {name:"Î©îÎ°† ÎÑàÎ¨¥ ÎßéÎã§", message:"Î©îÎ°† Î∞òÏ™Ω ÎÇòÎà†ÎìúÎ†§Ïöî",img: require('../image/Î©îÎ°†.jpg')}
        ],
    };
    }
    getPost = async () => {
        const userDocument = await firestore().collection('sharing-posts').doc("post1").get() 
        console.log(userDocument)
       }

    render(){ // Î†åÎçîÎßÅ Ìï¥ÏÑú ÌôîÎ©¥Ïóê Î≥¥Ïó¨Ï§Ñ Ïª®ÌÖêÏ∏†Îì§
        return(
            <View style={style.root}>
                <TopMenu/>
                <View style={style.location}>
                    <TouchableHighlight underlayColor = {'none'} onPress={()=>{alert("ÏúÑÏπòÏÑ§Ï†ï");}}>
                        <View style={{flexDirection : "row"}}>
                            <Image style={style.locationIcon} source={require('../image/location.png')}/>
                            <Text style={style.locationText} > ÏßÑÏ£ºÏãú Í∞ÄÏ¢åÎèô</Text>
                        </View>
                    </TouchableHighlight>
                <Text style={style.titleText}> Ïùò ÏâêÏñ¥ÎßÅ</Text>
                </View>
                {console.log(this.state.datas)}
                {console.log(this.state.post)}
                <FlatList // FlatList Ïùò Í∏∞Î≥∏ÏÜçÏÑ±, dataÎäî this.stateÏ≤òÎüº Í∞ÄÎ≥ÄÌïú Î∂ÄÎ∂ÑÏóêÏÑú Í∞ÄÏ†∏Ïò®Îã§.
                    style = {style.flatlist}
                    data={this.state.post}
                    renderItem={this.renderItem}  // this.stateÍ∞Ä renderItemÏùò Îß§Í∞úÎ≥ÄÏàòÎ°ú Îì§Ïñ¥Í∞ÑÎã§.
                    keyExtractor={ item=> item.name }>
                </FlatList>
                <PlusButton/>
            </View>
        ); 
    }//render method ..

    //Î©§Î≤Ñ Î©îÏÜåÎìú - FlatListÏùò renderItemÏö© 
    renderItem=({item, state})=>{

        return(
            <TouchableOpacity style={style.itemView} onPress={() => { this.props.navigation.navigate("SharingPost")}}>
                <Image source={{uri : item.img}} style={style.itemImg}/>
                <View style={{flexDirection:'column'}}>
                    <Text style={style.itemName}>{item.title}</Text>
                    <Text style={style.itemMsg}>{item.ÎÇ¥Ïö©}</Text>
                    <Text style={style.itemhowfar}>{"\n"}{"\n"} - ÌòÑ ÏúÑÏπòÎ°úÎ∂ÄÌÑ∞ ...m Ïù¥ÎÇ¥</Text> 
                </View>
            </TouchableOpacity>
        );
    }
}
const style= StyleSheet.create({
    flatlist:{},
    root:{
        flex:1,
        padding:16},
    location:{
        flexDirection : "row",
    },
    locationIcon:{},
    locationText:{
        fontFamily: 'NanumSquare_acEB',
        fontSize:18,
        paddingBottom:10,
    },
    titleText:{
        fontFamily: 'NanumSquare_acB',
        fontSize:17,
        marginTop:1
    },
    itemView:{
        flexDirection:'row',
        borderWidth:1.5,
        borderColor:'#353535',
        padding:7,
        borderRadius:5,
        marginBottom:10,
    },
    itemImg:{
        borderWidth:1,
        borderColor:'#353535',
        width:105,
        height:100,
        resizeMode:'cover',
        marginRight:10,
        borderRadius: 5,
    },
    itemName:{
        marginTop :7,
        fontFamily: 'NanumSquare_acEB',
        fontSize:22,
    },
    itemMsg:{
        marginTop:10,
        fontFamily: 'NanumSquare_acEB',
        fontSize:15,
        flexShrink:1,
    },
    itemhowfar:{
        fontFamily: 'NanumSquare_acB',
        fontSize:13,
    },
    actionButtonIcon: {
        position: 'absolute',
        fontSize: 20,
        height: 22,
        color: 'white',
    }
});

